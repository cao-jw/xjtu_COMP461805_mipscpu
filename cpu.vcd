$date
	Sun Jan 29 20:08:59 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module test $end
$var wire 1 ! zero $end
$var wire 32 " out_ALU [31:0] $end
$var wire 32 # R_data2 [31:0] $end
$var wire 32 $ R_data1 [31:0] $end
$var wire 32 % R_data [31:0] $end
$var wire 32 & Inst_Left [31:0] $end
$var wire 32 ' Inst [31:0] $end
$var wire 32 ( Address_out_PC [31:0] $end
$var wire 32 ) Address_in_PC [31:0] $end
$var wire 32 * Address_Add_PC [31:0] $end
$var reg 1 + clk $end
$var reg 1 , rst $end
$scope module cpu $end
$var wire 1 + CLK $end
$var wire 1 , rst $end
$var wire 1 ! zero $end
$var wire 1 - overflow $end
$var wire 32 . outsig [31:0] $end
$var wire 32 / out_ALU [31:0] $end
$var wire 32 0 outAdd2 [31:0] $end
$var wire 32 1 W_data [31:0] $end
$var wire 5 2 W_Reg [4:0] $end
$var wire 1 3 RegWr $end
$var wire 1 4 RegDst $end
$var wire 32 5 R_data2 [31:0] $end
$var wire 32 6 R_data1 [31:0] $end
$var wire 32 7 R_data [31:0] $end
$var wire 1 8 Mux32_3_select $end
$var wire 1 9 MemtoReg $end
$var wire 1 : MemWr $end
$var wire 1 ; MemRd $end
$var wire 1 < Jump $end
$var wire 32 = Inst_Left [31:0] $end
$var wire 32 > Inst [31:0] $end
$var wire 32 ? Branch_or_normal [31:0] $end
$var wire 1 @ Branch $end
$var wire 32 A Address_out_PC [31:0] $end
$var wire 32 B Address_in_PC [31:0] $end
$var wire 32 C Address_Add_PC [31:0] $end
$var wire 32 D Add2B [31:0] $end
$var wire 32 E ALU_B [31:0] $end
$var wire 1 F ALUSrc $end
$var wire 2 G ALUOp [1:0] $end
$var wire 3 H ALUCtrl [2:0] $end
$scope module MUX32_2 $end
$var wire 1 9 Select $end
$var wire 32 I S [31:0] $end
$var wire 32 J B [31:0] $end
$var wire 32 K A [31:0] $end
$upscope $end
$scope module add2 $end
$var wire 32 L C [31:0] $end
$var wire 32 M B [31:0] $end
$var wire 32 N A [31:0] $end
$upscope $end
$scope module alu $end
$var wire 32 O SA [31:0] $end
$var wire 32 P SB [31:0] $end
$var wire 1 ! Z $end
$var wire 1 - O $end
$var wire 3 Q Mod [2:0] $end
$var wire 32 R C [31:0] $end
$var wire 32 S B [31:0] $end
$var wire 32 T A [31:0] $end
$var reg 33 U result [32:0] $end
$upscope $end
$scope module alucu $end
$var wire 6 V funct [5:0] $end
$var wire 2 W ALUOp [1:0] $end
$var reg 3 X ALUCtrl [2:0] $end
$upscope $end
$scope module andgate $end
$var wire 1 ! B $end
$var wire 1 8 R $end
$var wire 1 @ A $end
$upscope $end
$scope module coderam $end
$var wire 32 Y Addr [31:0] $end
$var reg 32 Z Inst [31:0] $end
$var reg 8 [ tempaddr [7:0] $end
$upscope $end
$scope module left2_26 $end
$var wire 26 \ data [25:0] $end
$var wire 4 ] data1 [3:0] $end
$var reg 32 ^ odata [31:0] $end
$upscope $end
$scope module mcu $end
$var wire 6 _ op [5:0] $end
$var wire 1 3 RegWr $end
$var wire 1 4 RegDst $end
$var wire 1 9 MemtoReg $end
$var wire 1 : MemWr $end
$var wire 1 ; MemRd $end
$var wire 1 < Jump $end
$var wire 1 @ Branch $end
$var wire 1 F ALUSrc $end
$var wire 2 ` ALUOp [1:0] $end
$var reg 10 a controls [9:0] $end
$upscope $end
$scope module mux32_1 $end
$var wire 1 F Select $end
$var wire 32 b S [31:0] $end
$var wire 32 c B [31:0] $end
$var wire 32 d A [31:0] $end
$upscope $end
$scope module mux32_3 $end
$var wire 32 e B [31:0] $end
$var wire 1 8 Select $end
$var wire 32 f S [31:0] $end
$var wire 32 g A [31:0] $end
$upscope $end
$scope module mux32_4 $end
$var wire 32 h A [31:0] $end
$var wire 32 i B [31:0] $end
$var wire 1 < Select $end
$var wire 32 j S [31:0] $end
$upscope $end
$scope module mux5 $end
$var wire 5 k A [4:0] $end
$var wire 5 l B [4:0] $end
$var wire 1 4 RegDst $end
$var wire 5 m S [4:0] $end
$upscope $end
$scope module pc $end
$var wire 1 + clk $end
$var wire 32 n d [31:0] $end
$var wire 1 , reset $end
$var reg 32 o q [31:0] $end
$upscope $end
$scope module pc_adder $end
$var wire 32 p A [31:0] $end
$var wire 32 q B [31:0] $end
$var wire 32 r C [31:0] $end
$upscope $end
$scope module ram $end
$var wire 32 s Addr [31:0] $end
$var wire 1 t CLK $end
$var wire 1 ; R $end
$var wire 1 : W $end
$var wire 32 u W_data [31:0] $end
$var wire 32 v R_data [31:0] $end
$var reg 32 w data_out [31:0] $end
$scope begin MEM_READ $end
$upscope $end
$scope begin MEM_WRITE $end
$upscope $end
$upscope $end
$scope module rf $end
$var wire 1 + CLK $end
$var wire 5 x R_Reg1 [4:0] $end
$var wire 5 y R_Reg2 [4:0] $end
$var wire 32 z R_data1 [31:0] $end
$var wire 32 { R_data2 [31:0] $end
$var wire 1 3 W $end
$var wire 5 | W_Reg [4:0] $end
$var wire 32 } W_data [31:0] $end
$var integer 32 ~ i [31:0] $end
$scope begin MEM_WRITE $end
$upscope $end
$upscope $end
$scope module shl2_32 $end
$var wire 32 !" data [31:0] $end
$var reg 32 "" odata [31:0] $end
$upscope $end
$scope module sigexit16_32 $end
$var wire 16 #" Inst [15:0] $end
$var reg 32 $" Addr [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx $"
bx #"
bx ""
bx !"
b100000 ~
bx }
bx |
bx {
bx z
bx y
bx x
bx w
bx v
bx u
zt
bx s
bx r
bx q
b100 p
bx o
bx n
bx m
bx l
bx k
bx j
bx i
bx h
bx g
bx f
bx e
bx d
bx c
bx b
bx a
bx `
bx _
bx ^
bx ]
bx \
bx [
bx Z
bx Y
bx X
bx W
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
xF
bx E
bx D
bx C
bx B
bx A
x@
bx ?
bx >
bx =
x<
x;
x:
x9
x8
bx 7
bx 6
bx 5
x4
x3
bx 2
bx 1
bx 0
bx /
bx .
x-
0,
0+
bx *
bx )
bx (
bx '
bx &
bx %
bx $
bx #
bx "
x!
$end
#10
0!
b100 1
b100 I
b100 }
b100 "
b100 /
b100 K
b100 R
b100 s
0-
b100 U
b0zzzzzzzz %
b0zzzzzzzz 7
b0zzzzzzzz J
b0zzzzzzzz v
08
b100 )
b100 B
b100 j
b100 n
b100 ?
b100 f
b100 h
14
13
0F
0;
0:
09
0@
0<
b10 G
b10 W
b10 `
b110000010001000 0
b110000010001000 L
b110000010001000 e
b110000010000100 D
b110000010000100 M
b110000010000100 ""
b101 H
b101 Q
b101 X
b1100000010 a
b1000010000110000010000100 &
b1000010000110000010000100 =
b1000010000110000010000100 ^
b1000010000110000010000100 i
b10 P
b10 E
b10 S
b10 b
b1100000100001 .
b1100000100001 c
b1100000100001 !"
b1100000100001 $"
b11 2
b11 m
b11 |
b10000100001100000100001 \
b100001 V
b1100000100001 #"
b10 #
b10 5
b10 d
b10 u
b10 {
b10 y
b10 O
b10 $
b10 6
b10 T
b10 z
b10 x
b11 l
b10 k
b0 _
b0 ]
b10000100001100000100001 '
b10000100001100000100001 >
b10000100001100000100001 Z
b0 [
b100 *
b100 C
b100 N
b100 g
b100 r
b0 (
b0 A
b0 Y
b0 o
b0 q
1,
1+
#20
0,
0+
#30
b110000010001000 D
b110000010001000 M
b110000010001000 ""
b1100010000110000010001000 &
b1100010000110000010001000 =
b1100010000110000010001000 ^
b1100010000110000010001000 i
b110 H
b110 Q
b110 X
b10 1
b10 I
b10 }
b10 "
b10 /
b10 K
b10 R
b10 s
b1100000100010 .
b1100000100010 c
b1100000100010 !"
b1100000100010 $"
b10 U
b1000 )
b1000 B
b1000 j
b1000 n
b11000100001100000100010 \
b100010 V
b1100000100010 #"
b100 O
b100 $
b100 6
b100 T
b100 z
b11 x
b1000 ?
b1000 f
b1000 h
b11000100001100000100010 '
b11000100001100000100010 >
b11000100001100000100010 Z
b1 [
b110000010010000 0
b110000010010000 L
b110000010010000 e
b1000 *
b1000 C
b1000 N
b1000 g
b1000 r
b100 (
b100 A
b100 Y
b100 o
b100 q
1+
#40
0+
#50
b110000010000000 D
b110000010000000 M
b110000010000000 ""
b10000101000110000010000000 &
b10000101000110000010000000 =
b10000101000110000010000000 ^
b10000101000110000010000000 i
b100 H
b100 Q
b100 X
0-
b1100000100000 .
b1100000100000 c
b1100000100000 !"
b1100000100000 $"
b101 P
b101 E
b101 S
b101 b
b1100 )
b1100 B
b1100 j
b1100 n
b100001010001100000100000 \
b100000 V
b1100000100000 #"
b101 #
b101 5
b101 d
b101 u
b101 {
b101 y
b100 x
b101 k
b1100 ?
b1100 f
b1100 h
b100001010001100000100000 '
b100001010001100000100000 >
b100001010001100000100000 Z
b10 [
b110000010001100 0
b110000010001100 L
b110000010001100 e
b1100 *
b1100 C
b1100 N
b1100 g
b1100 r
b1000 (
b1000 A
b1000 Y
b1000 o
b1000 q
0!
b1001 1
b1001 I
b1001 }
b1001 "
b1001 /
b1001 K
b1001 R
b1001 s
b1001 U
b100 O
b100 $
b100 6
b100 T
b100 z
1+
#60
0+
#70
1!
b110000010010000 D
b110000010010000 M
b110000010010000 ""
b10000011000110000010010000 &
b10000011000110000010010000 =
b10000011000110000010010000 ^
b10000011000110000010010000 i
b0 H
b0 Q
b0 X
b0 1
b0 I
b0 }
b0 "
b0 /
b0 K
b0 R
b0 s
b0 U
b1100000100100 .
b1100000100100 c
b1100000100100 !"
b1100000100100 $"
b1001 P
b1001 E
b1001 S
b1001 b
b10000 )
b10000 B
b10000 j
b10000 n
b100000110001100000100100 \
b100100 V
b1100000100100 #"
b1001 #
b1001 5
b1001 d
b1001 u
b1001 {
b11 y
b11 k
b10000 ?
b10000 f
b10000 h
b100000110001100000100100 '
b100000110001100000100100 >
b100000110001100000100100 Z
b11 [
b110000010100000 0
b110000010100000 L
b110000010100000 e
b10000 *
b10000 C
b10000 N
b10000 g
b10000 r
b1100 (
b1100 A
b1100 Y
b1100 o
b1100 q
1+
#80
0+
#90
0!
b100 1
b100 I
b100 }
b100 "
b100 /
b100 K
b100 R
b100 s
b100 U
b100000010000000 D
b100000010000000 M
b100000010000000 ""
b1100100000100000010000000 &
b1100100000100000010000000 =
b1100100000100000010000000 ^
b1100100000100000010000000 i
b100 H
b100 Q
b100 X
b1000000100000 .
b1000000100000 c
b1000000100000 !"
b1000000100000 $"
b10 2
b10 m
b10 |
b10100 )
b10100 B
b10100 j
b10100 n
b11001000001000000100000 \
b100000 V
b1000000100000 #"
b100 y
b0 O
b0 $
b0 6
b0 T
b0 z
b11 x
b10 l
b100 k
b10100 ?
b10100 f
b10100 h
b11001000001000000100000 '
b11001000001000000100000 >
b11001000001000000100000 Z
b100 [
b100000010010100 0
b100000010010100 L
b100000010010100 e
b10100 *
b10100 C
b10100 N
b10100 g
b10100 r
b10000 (
b10000 A
b10000 Y
b10000 o
b10000 q
b100 P
b100 E
b100 S
b100 b
b100 #
b100 5
b100 d
b100 u
b100 {
1+
#100
0+
#110
x-
x4
03
xF
x9
1<
bx G
bx W
bx `
b11100 D
b11100 M
b11100 ""
b11100 &
b11100 =
b11100 ^
b11100 i
bx H
bx Q
bx X
bx0x00x01xx a
x!
bx 1
bx I
bx }
bx "
bx /
bx K
bx R
bx s
bx U
b111 .
b111 c
b111 !"
b111 $"
b0xxx P
b0xxx E
b0xxx S
b0xxx b
b0 2
b0 m
b0 |
b11100 )
b11100 B
b11100 j
b11100 n
b111 \
b111 V
b111 #"
b0 #
b0 5
b0 d
b0 u
b0 {
b0 y
b0 x
b0 l
b0 k
b10 _
b11000 ?
b11000 f
b11000 h
b1000000000000000000000000111 '
b1000000000000000000000000111 >
b1000000000000000000000000111 Z
b101 [
b110100 0
b110100 L
b110100 e
b11000 *
b11000 C
b11000 N
b11000 g
b11000 r
b10100 (
b10100 A
b10100 Y
b10100 o
b10100 q
1+
#120
0+
#130
b100 H
b100 Q
b100 X
0!
b0x00xxxxxxxxxxx 1
b0x00xxxxxxxxxxx I
b0x00xxxxxxxxxxx }
b10011100010100 "
b10011100010100 /
b10011100010100 K
b10011100010100 R
b10011100010100 s
0-
b10011100010100 U
b100000 )
b100000 B
b100000 j
b100000 n
1F
1:
0<
b0 G
b0 W
b0 `
b1001110001000000 D
b1001110001000000 M
b1001110001000000 ""
b10000011001001110001000000 &
b10000011001001110001000000 =
b10000011001001110001000000 ^
b10000011001001110001000000 i
bx0101x0000 a
b10011100010000 P
b10011100010000 E
b10011100010000 S
b10011100010000 b
b10011100010000 .
b10011100010000 c
b10011100010000 !"
b10011100010000 $"
b0xxx 2
b0xxx m
b0xxx |
b100000110010011100010000 \
b10000 V
b10011100010000 #"
b11 y
b100 O
b100 $
b100 6
b100 T
b100 z
b100 x
b100 l
b11 k
b101011 _
b100000 ?
b100000 f
b100000 h
b10101100100000110010011100010000 '
b10101100100000110010011100010000 >
b10101100100000110010011100010000 Z
b111 [
b1001110001100000 0
b1001110001100000 L
b1001110001100000 e
b100000 *
b100000 C
b100000 N
b100000 g
b100000 r
b11100 (
b11100 A
b11100 Y
b11100 o
b11100 q
1+
#140
0+
#150
b100 %
b100 7
b100 J
b100 v
b100 w
b100 1
b100 I
b100 }
04
13
1;
0:
19
b10000100001001110001000000 &
b10000100001001110001000000 =
b10000100001001110001000000 ^
b10000100001001110001000000 i
b111010000 a
b100 2
b100 m
b100 |
b100100 )
b100100 B
b100100 j
b100100 n
b100001000010011100010000 \
b100 #
b100 5
b100 d
b100 u
b100 {
b100 y
b100 k
b100011 _
b100100 ?
b100100 f
b100100 h
b10001100100001000010011100010000 '
b10001100100001000010011100010000 >
b10001100100001000010011100010000 Z
b1000 [
b1001110001100100 0
b1001110001100100 L
b1001110001100100 e
b100100 *
b100100 C
b100100 N
b100100 g
b100100 r
b100000 (
b100000 A
b100000 Y
b100000 o
b100000 q
1+
#160
0+
#170
b110 H
b110 Q
b110 X
18
1!
x4
03
0F
0;
x9
1@
b1 G
b1 W
b1 `
b11111111111111111111111111011100 D
b11111111111111111111111111011100 M
b11111111111111111111111111011100 ""
b1100011111111111111011100 &
b1100011111111111111011100 =
b1100011111111111111011100 ^
b1100011111111111111011100 i
bx0000x1001 a
b0xxxxxxxx 1
b0xxxxxxxx I
b0xxxxxxxx }
b0zzzzzzzz %
b0zzzzzzzz 7
b0zzzzzzzz J
b0zzzzzzzz v
bx w
b0 P
b0 E
b0 S
b0 b
b0 "
b0 /
b0 K
b0 R
b0 s
b11111111111111111111111111110111 .
b11111111111111111111111111110111 c
b11111111111111111111111111110111 !"
b11111111111111111111111111110111 $"
b0 U
bx11 2
bx11 m
bx11 |
b100 )
b100 B
b100 j
b100 n
b11000111111111111110111 \
b110111 V
b1111111111110111 #"
b0 #
b0 5
b0 d
b0 u
b0 {
b11 y
b0 O
b0 $
b0 6
b0 T
b0 z
b11 x
b11111 l
b11 k
b100 _
b100 ?
b100 f
b100 h
b10000011000111111111111110111 '
b10000011000111111111111110111 >
b10000011000111111111111110111 Z
b1001 [
b100 0
b100 L
b100 e
b101000 *
b101000 C
b101000 N
b101000 g
b101000 r
b100100 (
b100100 A
b100100 Y
b100100 o
b100100 q
1+
#180
0+
#190
14
13
09
0@
b10 G
b10 W
b10 `
b110000010001000 D
b110000010001000 M
b110000010001000 ""
b1100010000110000010001000 &
b1100010000110000010001000 =
b1100010000110000010001000 ^
b1100010000110000010001000 i
b1100000010 a
08
0!
b11111111111111111111111111111100 1
b11111111111111111111111111111100 I
b11111111111111111111111111111100 }
b11111111111111111111111111111100 "
b11111111111111111111111111111100 /
b11111111111111111111111111111100 K
b11111111111111111111111111111100 R
b11111111111111111111111111111100 s
1-
b111111111111111111111111111111100 U
b1100000100010 .
b1100000100010 c
b1100000100010 !"
b1100000100010 $"
b100 P
b100 E
b100 S
b100 b
b11 2
b11 m
b11 |
b1000 )
b1000 B
b1000 j
b1000 n
b11000100001100000100010 \
b100010 V
b1100000100010 #"
b100 #
b100 5
b100 d
b100 u
b100 {
b10 y
b11 l
b10 k
b0 _
b1000 ?
b1000 f
b1000 h
b11000100001100000100010 '
b11000100001100000100010 >
b11000100001100000100010 Z
b1 [
b110000010010000 0
b110000010010000 L
b110000010010000 e
b1000 *
b1000 C
b1000 N
b1000 g
b1000 r
b100 (
b100 A
b100 Y
b100 o
b100 q
1+
#200
0+
#210
b110000010000000 D
b110000010000000 M
b110000010000000 ""
b10000101000110000010000000 &
b10000101000110000010000000 =
b10000101000110000010000000 ^
b10000101000110000010000000 i
b100 H
b100 Q
b100 X
0!
0-
b1100000100000 .
b1100000100000 c
b1100000100000 !"
b1100000100000 $"
b101 P
b101 E
b101 S
b101 b
b1100 )
b1100 B
b1100 j
b1100 n
b100001010001100000100000 \
b100000 V
b1100000100000 #"
b101 #
b101 5
b101 d
b101 u
b101 {
b101 y
b100 x
b101 k
b1100 ?
b1100 f
b1100 h
b100001010001100000100000 '
b100001010001100000100000 >
b100001010001100000100000 Z
b10 [
b110000010001100 0
b110000010001100 L
b110000010001100 e
b1100 *
b1100 C
b1100 N
b1100 g
b1100 r
b1000 (
b1000 A
b1000 Y
b1000 o
b1000 q
b1001 1
b1001 I
b1001 }
b1001 "
b1001 /
b1001 K
b1001 R
b1001 s
b1001 U
b100 O
b100 $
b100 6
b100 T
b100 z
1+
#220
0+
#230
1!
b110000010010000 D
b110000010010000 M
b110000010010000 ""
b10000011000110000010010000 &
b10000011000110000010010000 =
b10000011000110000010010000 ^
b10000011000110000010010000 i
b0 H
b0 Q
b0 X
b0 1
b0 I
b0 }
b0 "
b0 /
b0 K
b0 R
b0 s
b0 U
b1100000100100 .
b1100000100100 c
b1100000100100 !"
b1100000100100 $"
b1001 P
b1001 E
b1001 S
b1001 b
b10000 )
b10000 B
b10000 j
b10000 n
b100000110001100000100100 \
b100100 V
b1100000100100 #"
b1001 #
b1001 5
b1001 d
b1001 u
b1001 {
b11 y
b11 k
b10000 ?
b10000 f
b10000 h
b100000110001100000100100 '
b100000110001100000100100 >
b100000110001100000100100 Z
b11 [
b110000010100000 0
b110000010100000 L
b110000010100000 e
b10000 *
b10000 C
b10000 N
b10000 g
b10000 r
b1100 (
b1100 A
b1100 Y
b1100 o
b1100 q
1+
#240
0+
#250
0!
b100 1
b100 I
b100 }
b100 "
b100 /
b100 K
b100 R
b100 s
b100 U
b100000010000000 D
b100000010000000 M
b100000010000000 ""
b1100100000100000010000000 &
b1100100000100000010000000 =
b1100100000100000010000000 ^
b1100100000100000010000000 i
b100 H
b100 Q
b100 X
b1000000100000 .
b1000000100000 c
b1000000100000 !"
b1000000100000 $"
b10 2
b10 m
b10 |
b10100 )
b10100 B
b10100 j
b10100 n
b11001000001000000100000 \
b100000 V
b1000000100000 #"
b100 y
b0 O
b0 $
b0 6
b0 T
b0 z
b11 x
b10 l
b100 k
b10100 ?
b10100 f
b10100 h
b11001000001000000100000 '
b11001000001000000100000 >
b11001000001000000100000 Z
b100 [
b100000010010100 0
b100000010010100 L
b100000010010100 e
b10100 *
b10100 C
b10100 N
b10100 g
b10100 r
b10000 (
b10000 A
b10000 Y
b10000 o
b10000 q
b100 P
b100 E
b100 S
b100 b
b100 #
b100 5
b100 d
b100 u
b100 {
1+
#260
0+
#270
x-
x4
03
xF
x9
1<
bx G
bx W
bx `
b11100 D
b11100 M
b11100 ""
b11100 &
b11100 =
b11100 ^
b11100 i
bx H
bx Q
bx X
bx0x00x01xx a
x!
bx 1
bx I
bx }
bx "
bx /
bx K
bx R
bx s
bx U
b111 .
b111 c
b111 !"
b111 $"
b0xxx P
b0xxx E
b0xxx S
b0xxx b
b0 2
b0 m
b0 |
b11100 )
b11100 B
b11100 j
b11100 n
b111 \
b111 V
b111 #"
b0 #
b0 5
b0 d
b0 u
b0 {
b0 y
b0 x
b0 l
b0 k
b10 _
b11000 ?
b11000 f
b11000 h
b1000000000000000000000000111 '
b1000000000000000000000000111 >
b1000000000000000000000000111 Z
b101 [
b110100 0
b110100 L
b110100 e
b11000 *
b11000 C
b11000 N
b11000 g
b11000 r
b10100 (
b10100 A
b10100 Y
b10100 o
b10100 q
1+
#280
0+
#290
b100 H
b100 Q
b100 X
0!
b0x00xxxxxxxxxxx 1
b0x00xxxxxxxxxxx I
b0x00xxxxxxxxxxx }
b10011100010100 "
b10011100010100 /
b10011100010100 K
b10011100010100 R
b10011100010100 s
0-
b10011100010100 U
b100000 )
b100000 B
b100000 j
b100000 n
1F
1:
0<
b0 G
b0 W
b0 `
b1001110001000000 D
b1001110001000000 M
b1001110001000000 ""
b10000011001001110001000000 &
b10000011001001110001000000 =
b10000011001001110001000000 ^
b10000011001001110001000000 i
bx0101x0000 a
b10011100010000 P
b10011100010000 E
b10011100010000 S
b10011100010000 b
b10011100010000 .
b10011100010000 c
b10011100010000 !"
b10011100010000 $"
b0xxx 2
b0xxx m
b0xxx |
b100000110010011100010000 \
b10000 V
b10011100010000 #"
b11 y
b100 O
b100 $
b100 6
b100 T
b100 z
b100 x
b100 l
b11 k
b101011 _
b100000 ?
b100000 f
b100000 h
b10101100100000110010011100010000 '
b10101100100000110010011100010000 >
b10101100100000110010011100010000 Z
b111 [
b1001110001100000 0
b1001110001100000 L
b1001110001100000 e
b100000 *
b100000 C
b100000 N
b100000 g
b100000 r
b11100 (
b11100 A
b11100 Y
b11100 o
b11100 q
1+
#300
0+
